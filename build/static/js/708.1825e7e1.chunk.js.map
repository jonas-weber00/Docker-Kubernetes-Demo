{"version":3,"file":"static/js/708.1825e7e1.chunk.js","mappings":"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","sources":["components/DisconnectedWallet.tsx","components/layouts/PaddedLayout.tsx","contexts/utils.tsx","env.ts","views/TraitsManage/style.tsx","views/TraitsManage/components/ConfirmDialog.tsx","views/TraitsManage/index.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/DeleteForever.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["const DisconnectedWallet = () => {\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n            <h4 style={{ color: '#253b80', letterSpacing: '2px' }}>\r\n                Please connect your wallet!\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\nexport default DisconnectedWallet","// import { Footer } from \"components/Footer\";\r\nimport { BODY_MARGIN_TOP, screen } from \"env\";\r\nimport React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface PaddedLayoutProps {\r\n    className?: string;\r\n    children: ReactNode;\r\n}\r\n\r\nfunction PaddedLayoutBase({ className, children }: PaddedLayoutProps) {\r\n    return (\r\n        <div className={className}>\r\n            <div\r\n                className=\"content-layout\"\r\n                style={{ maxWidth: \"1420px\", margin: \"auto\" }}\r\n            >\r\n                {children}\r\n                {/* <Footer style={{ margin: \"60px 0\" }} /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const PaddedLayout = styled(PaddedLayoutBase)`\r\n    // ---------------------------------------------\r\n    // style\r\n    // ---------------------------------------------\r\n    background-color: ${({ theme }) => theme.backgroundColor};\r\n    color: ${({ theme }) => theme.textColor};\r\n\r\n    // ---------------------------------------------\r\n    // layout\r\n    // ---------------------------------------------\r\n    // pc\r\n    @media (min-width: ${screen.pc.min}px) {\r\n        padding: ${BODY_MARGIN_TOP.pc}px;\r\n\r\n        .NeuSection-root {\r\n            margin-bottom: 40px;\r\n        }\r\n    }\r\n\r\n    @media (min-width: ${screen.monitor.min}px) {\r\n        main {\r\n            max-width: ${screen.monitor.min}px;\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n\r\n    // tablet\r\n    @media (min-width: ${screen.tablet.min}px) and (max-width: ${screen.tablet.max}px) {\r\n        padding: ${BODY_MARGIN_TOP.tablet}px 30px 30px 30px;\r\n\r\n        .NeuSection-root {\r\n            margin-bottom: 40px;\r\n\r\n            .NeuSection-content {\r\n                padding: 30px;\r\n            }\r\n        }\r\n    }\r\n\r\n    // mobile\r\n    @media (max-width: ${screen.mobile.max}px) {\r\n        padding: ${BODY_MARGIN_TOP.mobile}px 15px 15px 15px;\r\n\r\n        .NeuSection-root {\r\n            margin-bottom: 40px;\r\n\r\n            .NeuSection-content {\r\n                padding: 20px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import axios from \"axios\";\r\nimport { SERVER_URL } from \"config/config\";\r\nimport { ReferenceObject } from \"type\";\r\n\r\nexport const MAX_UPLOAD_BYTES = 31457280;\r\nexport const OBJECT_IS_EMPTY_ERROR = \"Provided object is empty\";\r\nexport const ARWEAVE_SERVICE_HOST = \"https://ar.mintbase.xyz\";\r\n\r\nexport const makeRankString = (rank: number) => {\r\n  const randomNumString: string = String(Math.random()).split(\".\")[1];\r\n  let firstText = randomNumString.slice(0, 7);\r\n  const text = firstText.concat(String(rank));\r\n  return text;\r\n};\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: `${SERVER_URL}/api`, // Set your base URL\r\n  timeout: 30000, // Set a timeout (optional)\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    // Add any other headers you need\r\n  },\r\n});\r\n\r\nexport const uploadReference = async (referenceObject: ReferenceObject) => {\r\n  if (Object.keys(referenceObject).length === 0) {\r\n    throw new Error(OBJECT_IS_EMPTY_ERROR);\r\n  }\r\n  const formData = getFormDataFromJson(referenceObject);\r\n  try {\r\n    const request = await fetch(`${ARWEAVE_SERVICE_HOST}/reference`, {\r\n      method: 'POST',\r\n      //@ts-ignore\r\n      headers: {\r\n        'mb-api-key': \"anon\",\r\n      },\r\n      body: formData,\r\n      redirect: 'follow',\r\n    });\r\n    if (request.status !== 200) {\r\n      throw new Error(`Error uploading via arweave service: ${JSON.stringify(await request.json())}`);\r\n    }\r\n    const result = (await request.json());\r\n    return Object.assign(Object.assign({}, result), { media_url: `https://arweave.net/${result.media_hash}` });\r\n  }\r\n  catch (error) {\r\n    console.error('Uploading file to arweave failed');\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const getFormDataFromJson = (referenceObject: ReferenceObject) => {\r\n  const formData = new FormData();\r\n  Object.entries(referenceObject).forEach((entry) => {\r\n    const [key, value] = entry;\r\n    const hasCorrectMediaType = (key === 'document' || key === 'media' || key === 'animation_url');\r\n    const notMedia = !hasCorrectMediaType && !(value instanceof File);\r\n    const canBeUploaded = value instanceof File && value.size < MAX_UPLOAD_BYTES;\r\n    const invalidFile = !hasCorrectMediaType && (value instanceof File);\r\n    const mediaTypeWithoutFile = hasCorrectMediaType && (typeof (value) === 'string');\r\n    if (invalidFile) {\r\n      // example title: File\r\n      throw new Error('The provided field has a key that is not recognized by our service and will not be uploaded to arweave, try using media, animation_url or document');\r\n    }\r\n    if (mediaTypeWithoutFile) {\r\n      // example: media: \"\"  -> upload anyways\r\n      console.warn('The provided media type will not be uploaded because its a string and not a file, try attaching files to the following keys: media, animation_url or document');\r\n      //@ts-ignore\r\n      formData.append(key, value);\r\n    }\r\n    if (notMedia && typeof (value) === 'string') {\r\n      //fields\r\n      //@ts-ignore\r\n      formData.append(key, value);\r\n    }\r\n    else if (canBeUploaded) {\r\n      //media\r\n      //@ts-ignore\r\n      formData.append(key, value);\r\n    }\r\n  });\r\n  return formData;\r\n}\r\n\r\nexport const getActivityTime = (time: string) => {\r\n  const date = new Date(Number(time));\r\n\r\n  // Format the date and time components\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n  // Create a new formatted date string\r\n  const formattedDateTime = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n\r\n  return formattedDateTime;\r\n}\r\n\r\nexport const generateRandomString = (length: number) => {\r\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let result = '';\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","export const screen = {\r\n\tmobile: { max: 530 },\r\n\t// mobile : @media (max-width: ${screen.mobile.max}px)\r\n\ttablet: { min: 531, max: 830 },\r\n\t// tablet : @media (min-width: ${screen.tablet.min}px) and (max-width: ${screen.tablet.max}px)\r\n\tpc: { min: 831, max: 1439 },\r\n\t// pc : @media (min-width: ${screen.pc.min}px)\r\n\tmonitor: { min: 1440 },\r\n\t// monitor : @media (min-width: ${screen.pc.min}px) and (max-width: ${screen.pc.max}px)\r\n\t// huge monitor : @media (min-width: ${screen.monitor.min}px)\r\n} as const;\r\n\r\nexport const BODY_MARGIN_TOP = {\r\n\tpc: 50,\r\n\tmobile: 20,\r\n\ttablet: 20,\r\n};","import { screen } from \"env\";\r\nimport styled from \"styled-components\";\r\nimport { PaddedLayout } from \"components/layouts/PaddedLayout\";\r\n\r\nexport const Container = styled(PaddedLayout)`\r\n\r\n  .whiteBlock1 {\r\n    text-align: center;\r\n    background: white;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    position:relative;\r\n    transition: background-color 0.2s ease-in-out; \r\n    h6{\r\n      color:#ababab;\r\n    },\r\n    h4{\r\n        font-weight: 800;\r\n        font-size: 2.325rem;\r\n    }\r\n    .NFTs-link {\r\n      position: absolute;\r\n      width: 18px;\r\n      right: 10px;\r\n      top: 10px;\r\n      color: #b5b5b5;\r\n    }\r\n  }\r\n  .whiteBlock2 {\r\n    background: white;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    height: 40vh;\r\n  }\r\n\r\n  button {\r\n    text-transform: none !important;\r\n  }\r\n\r\n  @media (max-width: ${screen.mobile.max}px) {\r\n    \r\n  }\r\n\r\n  // pc\r\n  @media (min-width: ${screen.monitor.min}px) {\r\n  }\r\n\r\n  // under pc\r\n  @media (max-width: ${screen.pc.max}px) {\r\n  }\r\n\r\n  // mobile\r\n  @media (max-width: ${screen.mobile.max}px) {\r\n  }\r\n`;","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport Slide from '@mui/material/Slide';\r\n\r\ninterface ConfirmDialogProps {\r\n  isOpen: boolean;\r\n  setIsOpen: (value: boolean) => void;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  onConfirm: (value: any) => void;\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  title,\r\n  description,\r\n  category,\r\n  confirmText = 'Confirm',\r\n  cancelText = 'Cancel',\r\n  onConfirm,\r\n}) => {\r\n\r\n  const handleConfirm = () => {\r\n    setIsOpen(false);\r\n    onConfirm(category);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      TransitionComponent={Transition}\r\n      onClose={handleCancel}\r\n      aria-labelledby=\"confirm-dialog-title\"\r\n      aria-describedby=\"confirm-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"confirm-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"confirm-dialog-description\">\r\n          {description}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          {cancelText}\r\n        </Button>\r\n        <Button onClick={handleConfirm} color=\"primary\" autoFocus>\r\n          {confirmText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import { ChangeEvent, KeyboardEvent, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { Box, Button, Grid, Typography, IconButton, TextField, Chip, Divider, Stack, Skeleton } from \"@mui/material\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\n\r\nimport { Container } from \"./style\";\r\nimport { ContractInfoType, Traits } from \"type\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAlert } from \"contexts/AlertContext\";\r\nimport { useSpinner } from \"contexts/GlobalSpinner\";\r\nimport { axiosInstance } from \"contexts/utils\";\r\nimport { useWalletSelector } from \"contexts/WalletSelectorContext\";\r\n\r\nimport ConfirmDialog from \"./components/ConfirmDialog\";\r\nimport DisconnectedWallet from \"components/DisconnectedWallet\";\r\n\r\nexport default function TraitsManage() {\r\n  const { showSpinner, hideSpinner } = useSpinner();\r\n  const { showAlert } = useAlert()\r\n  const navigate = useNavigate();\r\n\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const tokenContract = urlParams.get('contract');\r\n\r\n\r\n  const { selector, accountId } = useWalletSelector();\r\n  const [connected, setConnected] = useState(false);\r\n  const [tokenData, setTokenData] = useState<ContractInfoType>();\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  const [catIsEditing, setCatIsEditing] = useState(false);\r\n  const [catInputText, setCatInputText] = useState('');\r\n  const [renCatIsEditing, setRenCatIsEditing] = useState(false);\r\n  const [renCatInputText, setRenCatInputText] = useState('');\r\n\r\n  const [currentCategory, setCurrentCategory] = useState('');\r\n  const [traitIsEditing, setTraitIsEditing] = useState(false);\r\n  const [traitInputText, setTraitInputText] = useState('');\r\n\r\n  const catInputRef = useRef<HTMLInputElement>(null);\r\n  const traitInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [traits, setTraits] = useState<Traits[]>([])\r\n\r\n  const gotoView = () => {\r\n    navigate(`/view?contract=${tokenContract}`)\r\n  }\r\n\r\n  const handleClickButton = (key: string, category?: string) => {\r\n    switch (key) {\r\n      case \"add_category\":\r\n        setCatIsEditing(true)\r\n        setTraitIsEditing(false)\r\n        setTraitInputText(\"\")\r\n        setRenCatIsEditing(false)\r\n        setRenCatInputText(\"\")\r\n        break;\r\n      case \"rename_category\":\r\n        setRenCatIsEditing(true)\r\n        setRenCatInputText(category ? category : \"\")\r\n        setCatIsEditing(false)\r\n        setCatInputText(\"\")\r\n        setTraitIsEditing(false)\r\n        setTraitInputText(\"\")\r\n        setCurrentCategory(category ? category : \"\")\r\n        break;\r\n      case \"add_trait\":\r\n        setTraitIsEditing(true)\r\n        setCatIsEditing(false)\r\n        setCatInputText(\"\")\r\n        setRenCatIsEditing(false)\r\n        setRenCatInputText(\"\")\r\n        setCurrentCategory(category ? category : \"\")\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>, key: string) => {\r\n    switch (key) {\r\n      case \"add_category\":\r\n        setCatInputText(e.target.value)\r\n        break;\r\n      case \"rename_category\":\r\n        setRenCatInputText(e.target.value)\r\n        break;\r\n      case \"add_trait\":\r\n        setTraitInputText(e.target.value)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>, key: string,) => {\r\n    if (e.key === 'Enter') {\r\n      switch (key) {\r\n        case \"add_category\":\r\n          setCatIsEditing(false);\r\n          addCategory()\r\n          break;\r\n        case \"rename_category\":\r\n          setRenCatIsEditing(false)\r\n          updateCategory()\r\n          break;\r\n        case \"add_trait\":\r\n          setTraitIsEditing(false);\r\n          addValue()\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const addValue = () => {\r\n    if (currentCategory === \"\" || traitInputText === \"\") return;\r\n    setTraits((prevTraits) =>\r\n      prevTraits.map((trait) =>\r\n        trait.category === currentCategory\r\n          ? { ...trait, values: [...trait.values, traitInputText] }\r\n          : trait\r\n      )\r\n    );\r\n    setTraitInputText(\"\")\r\n    setCurrentCategory(\"\")\r\n  }\r\n\r\n  const addCategory = () => {\r\n    if (catInputText === \"\") return;\r\n    setTraits((prevCategory) => [\r\n      ...prevCategory,\r\n      { category: catInputText, values: [] },\r\n    ]);\r\n    setCatInputText(\"\")\r\n  }\r\n\r\n  const handleDeleteValue = (category: string, valueToDelete: string) => {\r\n    setTraits((prevTraits) =>\r\n      prevTraits.map((trait) =>\r\n        trait.category === category\r\n          ? {\r\n            ...trait,\r\n            values: trait.values.filter((value) => value !== valueToDelete)\r\n          }\r\n          : trait\r\n      )\r\n    );\r\n\r\n  };\r\n\r\n  const updateCategory = () => {\r\n    setTraits((prevTraits) =>\r\n      prevTraits.map((trait) =>\r\n        trait.category === currentCategory\r\n          ? { ...trait, category: renCatInputText }\r\n          : trait\r\n      )\r\n    );\r\n    setRenCatInputText(\"\")\r\n  };\r\n\r\n\r\n  const deleteCategory = async (category: string) => {\r\n    setIsOpen(true);\r\n    setCurrentCategory(category);\r\n  };\r\n\r\n  const confirmedDelete = async (category: string) => {\r\n    setTraits((prevTraits) =>\r\n      prevTraits.filter((trait) => trait.category !== category)\r\n    );\r\n  }\r\n\r\n\r\n  const handleClickOutside = (event: MouseEvent) => {\r\n    if (catInputText.length > 0 || traitInputText.length > 0) return;\r\n    if (catInputRef.current && !catInputRef.current.contains(event.target as Node)) {\r\n      setCatIsEditing(false);\r\n      setCatInputText(\"\");\r\n    }\r\n    if (traitInputRef.current && !traitInputRef.current.contains(event.target as Node)) {\r\n      setTraitIsEditing(false);\r\n      setTraitInputText(\"\");\r\n    }\r\n  };\r\n\r\n  const saveTraits = (isClose: boolean = false) => {\r\n    if (traits) {\r\n      showSpinner()\r\n      axiosInstance.post('/traits', { contract: tokenContract, traits }).then((data) => {\r\n        if (data.data.success) {\r\n          showAlert(\"success\", \"You have saved Traits successfully.\")\r\n          hideSpinner()\r\n          isClose && gotoView();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const init = async () => {\r\n    const connected = selector.isSignedIn();\r\n    setConnected(connected);\r\n    if (connected) {\r\n      showSpinner()\r\n      axiosInstance.get(`/contract/get_token_by_contract?contract=${tokenContract}`).then(({ data }) => {\r\n        setTokenData(data.token)\r\n      })\r\n      axiosInstance.get(`/traits?contract=${tokenContract}`).then(({ data }) => {\r\n        if (data.data) {\r\n          setTraits(JSON.parse(data.data.traits))\r\n        } else setTraits([])\r\n        hideSpinner()\r\n      })\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    //eslint-disable-next-line\r\n  }, [accountId]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [handleClickOutside]);\r\n\r\n  return (\r\n    <Container >\r\n      {!connected && <DisconnectedWallet />}\r\n      {!connected &&\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} >\r\n            <Skeleton variant=\"text\" sx={{ width: 100, margin: 'auto' }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Skeleton variant=\"text\" sx={{ width: 140, margin: 'auto' }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Skeleton height={30} sx={{ width: 240 }} />\r\n          </Grid>\r\n          <Grid item md={1} sm={2} xs={3}>\r\n            <Skeleton height={30} />\r\n          </Grid>\r\n          <Grid item md={1} sm={2} xs={3}>\r\n            <Skeleton height={30} />\r\n          </Grid>\r\n          <Grid item md={1} sm={2} xs={3}>\r\n            <Skeleton height={30} />\r\n          </Grid>\r\n          <Grid item md={1} sm={2} xs={3}>\r\n            <Skeleton height={30} />\r\n          </Grid>\r\n          <Grid item md={1} sm={2} xs={3}>\r\n            <Skeleton height={30} />\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n      {connected && (\r\n        <Grid sx={{ maxWidth: '900px', margin: 'auto' }}>\r\n          <Box sx={{ mb: 5, textAlign: 'center', position: 'relative' }}  >\r\n            <IconButton\r\n              onClick={gotoView}\r\n              sx={{\r\n                position: 'absolute',\r\n                right: '0px',\r\n                top: '-20px'\r\n              }}>\r\n              <CloseIcon sx={{ width: '18px', height: '18px' }} />\r\n            </IconButton>\r\n            <Typography className=\"body_font\" variant=\"subtitle2\" sx={{ color: '#656466' }}>\r\n              {`Contract (${tokenData?.name})`}\r\n            </Typography>\r\n            <Typography variant=\"h5\" className=\"subtitle\">\r\n              Manage Traits\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            {traits.map((data: Traits, index: number) => {\r\n              return (\r\n                <Box my={5}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: '3px' }}>\r\n                    {renCatIsEditing && data.category === currentCategory ? (\r\n                      <Box>\r\n                        <TextField\r\n                          value={renCatInputText}\r\n                          onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange(e, \"rename_category\")}\r\n                          onKeyDown={(e: KeyboardEvent<HTMLInputElement>) => handleKeyDown(e, \"rename_category\")}\r\n                          autoFocus\r\n                          size=\"small\"\r\n                          variant=\"standard\"\r\n                        />\r\n                        {renCatInputText.length > 0 &&\r\n                          <IconButton color=\"primary\" aria-label=\"add to shopping cart\" onClick={updateCategory}>\r\n                            <CheckIcon />\r\n                          </IconButton>\r\n                        }\r\n                      </Box>\r\n                    ) : (\r\n                      <>\r\n                        <Typography variant=\"h5\" key={index}>\r\n                          {data.category}\r\n                        </Typography>\r\n                        <IconButton\r\n                          color=\"info\"\r\n                          aria-label=\"add to shopping cart\"\r\n                          onClick={() => handleClickButton(\"rename_category\", data.category)}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    )}\r\n                    <IconButton color=\"error\" aria-label=\"add to shopping cart\" onClick={() => deleteCategory(data.category)}>\r\n                      <DeleteForeverIcon />\r\n                    </IconButton>\r\n                  </Box>\r\n                  <Box sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 2,\r\n                    my: 2\r\n                  }}>\r\n                    {data.values.map((trait: string, index: number) => {\r\n                      return <Chip\r\n                        label={trait}\r\n                        variant=\"outlined\"\r\n                        sx={{ backgroundColor: 'white' }}\r\n                        onDelete={() => handleDeleteValue(data.category, trait)}\r\n                        key={index}\r\n                      />\r\n                    })}\r\n                    {traitIsEditing && data.category === currentCategory ? (\r\n                      <Box>\r\n                        <TextField\r\n                          value={traitInputText}\r\n                          onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange(e, \"add_trait\")}\r\n                          onKeyDown={(e: KeyboardEvent<HTMLInputElement>) => handleKeyDown(e, \"add_trait\")}\r\n                          autoFocus\r\n                          inputRef={traitInputRef}\r\n                          size=\"small\"\r\n                          variant=\"standard\"\r\n                        />\r\n                        {traitInputText.length > 0 &&\r\n                          <IconButton color=\"primary\" aria-label=\"add to shopping cart\" onClick={addValue}>\r\n                            <CheckIcon />\r\n                          </IconButton>\r\n                        }\r\n                      </Box>\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"text\"\r\n                        sx={{ minWidth: '45px', '& .MuiButton-startIcon': { m: 0 } }}\r\n                        startIcon={<AddIcon />}\r\n                        onClick={() => handleClickButton(\"add_trait\", data.category)}\r\n                      >\r\n                        Trait\r\n                      </Button>\r\n                    )}\r\n                  </Box>\r\n                  <Divider />\r\n                </Box>\r\n              )\r\n            })}\r\n            {catIsEditing ? (\r\n              <Box>\r\n                <TextField\r\n                  value={catInputText}\r\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange(e, \"add_category\")}\r\n                  onKeyDown={(e: KeyboardEvent<HTMLInputElement>) => handleKeyDown(e, \"add_category\")}\r\n                  autoFocus\r\n                  inputRef={catInputRef}\r\n                  size=\"small\"\r\n                  variant=\"standard\"\r\n                />\r\n                {catInputText.length > 0 &&\r\n                  <IconButton color=\"primary\" aria-label=\"add to shopping cart\" onClick={addCategory}>\r\n                    <CheckIcon />\r\n                  </IconButton>\r\n                }\r\n              </Box>\r\n            ) : (\r\n              <Button\r\n                variant=\"text\"\r\n                sx={{ minWidth: '45px', '& .MuiButton-startIcon': { m: 0 } }}\r\n                startIcon={<AddIcon />}\r\n                onClick={() => handleClickButton(\"add_category\")}\r\n              >\r\n                Category\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Stack direction={'row'} sx={{ mt: 5, mb: 1, gap: 2, justifyContent: 'center' }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                height: '50px',\r\n                width: '120px'\r\n              }}\r\n              onClick={gotoView}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                height: '50px',\r\n                width: '120px'\r\n              }}\r\n              onClick={() => saveTraits()}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"info\"\r\n              sx={{\r\n                height: '50px',\r\n                width: '150px'\r\n              }}\r\n              onClick={() => saveTraits(true)}\r\n            >\r\n              Save & Close\r\n            </Button>\r\n          </Stack>\r\n\r\n          <ConfirmDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            title=\"Confirm Deletion\"\r\n            description={`Are you sure you want to delete this category?`}\r\n            category={currentCategory}\r\n            onConfirm={confirmedDelete}\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n    </Container >\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"names":["DisconnectedWallet","_jsx","style","textAlign","marginBottom","children","color","letterSpacing","PaddedLayout","styled","_ref","className","maxWidth","margin","_templateObject","_taggedTemplateLiteral","_ref2","theme","backgroundColor","_ref3","textColor","screen","BODY_MARGIN_TOP","axiosInstance","axios","baseURL","concat","SERVER_URL","timeout","headers","uploadReference","async","Object","keys","referenceObject","length","Error","formData","getFormDataFromJson","request","fetch","method","body","redirect","status","JSON","stringify","json","result","assign","media_url","media_hash","error","console","FormData","entries","forEach","entry","key","value","hasCorrectMediaType","notMedia","File","canBeUploaded","size","mediaTypeWithoutFile","warn","append","getActivityTime","time","date","Date","Number","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","generateRandomString","characters","i","charAt","Math","floor","random","mobile","max","tablet","min","pc","monitor","Container","Transition","React","props","ref","Slide","direction","isOpen","setIsOpen","title","description","category","confirmText","cancelText","onConfirm","handleCancel","_jsxs","Dialog","open","TransitionComponent","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","handleConfirm","autoFocus","TraitsManage","showSpinner","hideSpinner","useSpinner","showAlert","useAlert","navigate","useNavigate","tokenContract","URLSearchParams","window","location","search","get","selector","accountId","useWalletSelector","connected","setConnected","useState","tokenData","setTokenData","catIsEditing","setCatIsEditing","catInputText","setCatInputText","renCatIsEditing","setRenCatIsEditing","renCatInputText","setRenCatInputText","currentCategory","setCurrentCategory","traitIsEditing","setTraitIsEditing","traitInputText","setTraitInputText","catInputRef","useRef","traitInputRef","traits","setTraits","gotoView","handleClickButton","handleInputChange","e","target","handleKeyDown","addCategory","updateCategory","addValue","prevTraits","map","trait","values","prevCategory","handleClickOutside","event","current","contains","saveTraits","isClose","arguments","undefined","contract","then","data","success","useEffect","isSignedIn","token","parse","init","document","addEventListener","removeEventListener","Grid","container","spacing","item","xs","Skeleton","variant","sx","width","height","md","sm","Box","mb","position","IconButton","right","top","CloseIcon","Typography","name","index","my","display","alignItems","gap","TextField","onChange","onKeyDown","CheckIcon","_Fragment","EditIcon","deleteCategory","DeleteForeverIcon","Chip","label","onDelete","handleDeleteValue","valueToDelete","filter","inputRef","minWidth","m","startIcon","AddIcon","Divider","Stack","mt","justifyContent","ConfirmDialog","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}