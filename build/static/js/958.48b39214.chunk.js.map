{"version":3,"file":"static/js/958.48b39214.chunk.js","mappings":"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","sources":["components/DisconnectedWallet.tsx","@libs/components/IconSpan.tsx","@libs/components/Tooltip.tsx","@libs/components/InfoTooltip.tsx","@libs/is-touch-device/index.ts","components/PageTitle/index.tsx","components/PageTitle/style.tsx","components/layouts/PaddedLayout.tsx","contexts/utils.tsx","env.ts"],"sourcesContent":["const DisconnectedWallet = () => {\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n            <h4 style={{ color: '#253b80', letterSpacing: '2px' }}>\r\n                Please connect your wallet!\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\nexport default DisconnectedWallet","import styled from 'styled-components';\r\n\r\nexport const IconSpan = styled.span<{ wordBreak?: boolean }>`\r\n  word-break: ${({ wordBreak = true }) => (wordBreak ? 'keep-all' : 'unset')};\r\n  white-space: ${({ wordBreak = true }) => (wordBreak ? 'nowrap' : 'unset')};\r\n  font-family:Nunito;\r\n  font-size:30px;\r\n  letter-spacing: 1px;\r\n  svg,\r\n  .MuiSvgIcon-root {\r\n    font-size: 1em;\r\n    transform: translateY(0.15em);\r\n  }\r\n\r\n  sup {\r\n    vertical-align: unset;\r\n\r\n    svg,\r\n    .MuiSvgIcon-root {\r\n      vertical-align: text-top;\r\n      color: ${({ theme }) => theme.dimTextColor};\r\n      opacity: 0.4;\r\n      font-size: 13px;\r\n      transform: translateY(-1px);\r\n    }\r\n  }\r\n\r\n  sub {\r\n    vertical-align: unset;\r\n\r\n    svg,\r\n    .MuiSvgIcon-root {\r\n      vertical-align: text-bottom;\r\n      color: ${({ theme }) => theme.dimTextColor};\r\n      opacity: 0.4;\r\n      font-size: min(1em, 13px);\r\n    }\r\n  }\r\n`;\r\n","import { Tooltip as MuiTooltip, TooltipProps as MuiTooltipProps } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { MessageColor, NeumorphismTheme } from \"../../themes/Theme\";\r\n\r\nexport interface TooltipProps extends MuiTooltipProps {\r\n    color?: MessageColor;\r\n}\r\n\r\n/**\r\n * Styled component of the `<Tooltip/>` of the Material-UI\r\n *\r\n * @see https://material-ui.com/api/tooltip/\r\n */\r\nexport function Tooltip({ arrow = true, ...props }: TooltipProps) {\r\n    const classes = useTooltipStyle(props);\r\n\r\n    return <MuiTooltip classes={classes} arrow={arrow} {...props} />;\r\n}\r\n\r\nexport const useTooltipStyle = makeStyles<NeumorphismTheme, TooltipProps>(\r\n    (theme) => ({\r\n        tooltip: ({ color = \"normal\" }) => ({\r\n            position: \"relative\",\r\n            borderRadius: 3,\r\n            color: theme.tooltip[color].textColor,\r\n            backgroundColor: theme.tooltip[color].backgroundColor,\r\n            fontSize: \"0.9em\",\r\n            fontWeight: 700,\r\n            padding: \"10px 15px\",\r\n            boxShadow: \"1px 1px 6px 0px rgba(0,0,0,0.2)\",\r\n        }),\r\n        arrow: ({ color = \"normal\" }) => ({\r\n            color: theme.tooltip[color].backgroundColor,\r\n        }),\r\n    })\r\n);\r\n","import { isTouchDevice } from \"@libs/is-touch-device\";\r\nimport { InfoOutlined } from \"@mui/icons-material\";\r\nimport { ClickAwayListener } from \"@mui/material\";\r\nimport { ReactNode, useCallback, useMemo, useState } from \"react\";\r\n\r\nimport { Tooltip, TooltipProps } from \"./Tooltip\";\r\n\r\nexport interface InfoTooltipProps\r\n  extends Omit<TooltipProps, 'children' | 'title'> {\r\n  children: NonNullable<ReactNode>;\r\n}\r\n\r\nexport function InfoTooltip(props: InfoTooltipProps) {\r\n    const touchDevice = useMemo(() => isTouchDevice(), []);\r\n\r\n    return touchDevice ? (\r\n        <TouchTooltip {...props} />\r\n    ) : (\r\n        <PointerTooltip {...props} />\r\n    );\r\n}\r\n\r\nexport function PointerTooltip({\r\n    children,\r\n    placement = 'top',\r\n    ...tooltipProps\r\n  }: InfoTooltipProps) {\r\n    return (\r\n      <sup style={{ cursor: 'help' }}>\r\n        <Tooltip {...tooltipProps} title={children} placement={placement}>\r\n          <InfoOutlined />\r\n        </Tooltip>\r\n      </sup>\r\n    );\r\n  }\r\n  \r\n  export function TouchTooltip({\r\n    children,\r\n    placement = 'top',\r\n    ...tooltipProps\r\n  }: InfoTooltipProps) {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n  \r\n    const tooltipOpen = useCallback(() => {\r\n      setOpen(true);\r\n    }, []);\r\n  \r\n    const tooltipClose = useCallback(() => {\r\n      setOpen(false);\r\n    }, []);\r\n  \r\n    return (\r\n      <ClickAwayListener onClickAway={tooltipClose}>\r\n        <sup onClick={tooltipOpen}>\r\n          <Tooltip\r\n            {...tooltipProps}\r\n            open={open}\r\n            onClose={tooltipClose}\r\n            disableFocusListener\r\n            disableHoverListener\r\n            disableTouchListener\r\n            title={children}\r\n            placement={placement}\r\n          >\r\n            <InfoOutlined />\r\n          </Tooltip>\r\n        </sup>\r\n      </ClickAwayListener>\r\n    );\r\n  }","export function isTouchDevice(): boolean {\r\n    try {\r\n        return (\r\n            'ontouchstart' in document.documentElement ||\r\n            navigator.maxTouchPoints > 0 ||\r\n            //@ts-ignore\r\n            navigator.msMaxTouchPoints > 0\r\n        );\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    }\r\n}\r\n","import { IconSpan } from \"@libs/components/IconSpan\";\r\nimport { InfoTooltip } from \"@libs/components/InfoTooltip\";\r\nimport { Launch } from \"@mui/icons-material\";\r\nimport { ReactNode } from \"react\";\r\nimport * as Styled from \"./style\";\r\n\r\nexport interface PageTitleProps {\r\n    className?: string;\r\n    title: ReactNode;\r\n    tooltip?: string;\r\n    docs?: string;\r\n}\r\n\r\nexport default function PageTitle({\r\n    className,\r\n    title,\r\n    tooltip,\r\n    docs,\r\n}: PageTitleProps) {\r\n    return (\r\n        <Styled.Container className={className}>\r\n            <IconSpan>\r\n                {title}\r\n                {tooltip && (\r\n                    <>\r\n                        {\" \"}\r\n                        <InfoTooltip>{tooltip}</InfoTooltip>\r\n                    </>\r\n                )}\r\n            </IconSpan>\r\n            {docs && (\r\n                <a\r\n                    href={docs}\r\n                    target=\"anchor-docs\"\r\n                    rel=\"noreferrer\"\r\n                    style={{\r\n                        color: \"#CEC0C0\",\r\n                        fontSize: \"13px\",\r\n                        fontWeight: 860,\r\n                        display: \"inline-flex\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    Docs\r\n                    <Launch\r\n                        fill=\"#CEC0C0\"\r\n                        style={{\r\n                            marginLeft: \"5px\",\r\n                            width: \"10px\",\r\n                        }}\r\n                    />\r\n                </a>\r\n            )}\r\n        </Styled.Container>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { screen } from \"env\";\r\n\r\nexport const Container = styled.h1`\r\n    font-size: 40px;\r\n    font-weight: 800;\r\n    letter-spacing: -0.06em;\r\n    color: #6e4ac6;\r\n\r\n    a {\r\n        margin-left: 1.1em;\r\n\r\n        text-decoration: none;\r\n        font-size: 14px;\r\n        color: ${({ theme }) => theme.dimTextColor};\r\n        font-weight: 500;\r\n\r\n        svg {\r\n            font-size: 1em;\r\n            transform: translate(0.2em, 0.14em);\r\n        }\r\n    }\r\n\r\n    @media (max-width: ${screen.tablet.max}px) {\r\n        font-size: 36px;\r\n    }\r\n\r\n    @media (max-width: ${screen.mobile.max}px) {\r\n        font-size: 30px;\r\n    }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    margin-bottom: 25px;\r\n\r\n    @media (max-width: ${screen.mobile.max}px) {\r\n        margin-bottom: 15px;\r\n    }\r\n`;\r\n\r\nexport const FlexTitleContainer = styled.div`\r\n    background:white;\r\n    border-radius:12px;\r\n    padding: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    margin-bottom: 25px;\r\n\r\n    @media (max-width: 700px) {\r\n        align-items: flex-start;\r\n    }\r\n\r\n    @media (max-width: ${screen.mobile.max}px) {\r\n        margin-bottom: 15px;\r\n    }\r\n`;\r\n","// import { Footer } from \"components/Footer\";\r\nimport { BODY_MARGIN_TOP, screen } from \"env\";\r\nimport React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface PaddedLayoutProps {\r\n    className?: string;\r\n    children: ReactNode;\r\n}\r\n\r\nfunction PaddedLayoutBase({ className, children }: PaddedLayoutProps) {\r\n    return (\r\n        <div className={className}>\r\n            <div\r\n                className=\"content-layout\"\r\n                style={{ maxWidth: \"1420px\", margin: \"auto\" }}\r\n            >\r\n                {children}\r\n                {/* <Footer style={{ margin: \"60px 0\" }} /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const PaddedLayout = styled(PaddedLayoutBase)`\r\n    // ---------------------------------------------\r\n    // style\r\n    // ---------------------------------------------\r\n    background-color: ${({ theme }) => theme.backgroundColor};\r\n    color: ${({ theme }) => theme.textColor};\r\n\r\n    // ---------------------------------------------\r\n    // layout\r\n    // ---------------------------------------------\r\n    // pc\r\n    @media (min-width: ${screen.pc.min}px) {\r\n        padding: ${BODY_MARGIN_TOP.pc}px;\r\n\r\n        .NeuSection-root {\r\n            margin-bottom: 40px;\r\n        }\r\n    }\r\n\r\n    @media (min-width: ${screen.monitor.min}px) {\r\n        main {\r\n            max-width: ${screen.monitor.min}px;\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n\r\n    // tablet\r\n    @media (min-width: ${screen.tablet.min}px) and (max-width: ${screen.tablet.max}px) {\r\n        padding: ${BODY_MARGIN_TOP.tablet}px 30px 30px 30px;\r\n\r\n        .NeuSection-root {\r\n            margin-bottom: 40px;\r\n\r\n            .NeuSection-content {\r\n                padding: 30px;\r\n            }\r\n        }\r\n    }\r\n\r\n    // mobile\r\n    @media (max-width: ${screen.mobile.max}px) {\r\n        padding: ${BODY_MARGIN_TOP.mobile}px 15px 15px 15px;\r\n\r\n        .NeuSection-root {\r\n            margin-bottom: 40px;\r\n\r\n            .NeuSection-content {\r\n                padding: 20px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import axios from \"axios\";\r\nimport { SERVER_URL } from \"config/config\";\r\nimport { ReferenceObject } from \"type\";\r\n\r\nexport const MAX_UPLOAD_BYTES = 31457280;\r\nexport const OBJECT_IS_EMPTY_ERROR = \"Provided object is empty\";\r\nexport const ARWEAVE_SERVICE_HOST = \"https://ar.mintbase.xyz\";\r\n\r\nexport const makeRankString = (rank: number) => {\r\n  const randomNumString: string = String(Math.random()).split(\".\")[1];\r\n  let firstText = randomNumString.slice(0, 7);\r\n  const text = firstText.concat(String(rank));\r\n  return text;\r\n};\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: `${SERVER_URL}/api`, // Set your base URL\r\n  timeout: 30000, // Set a timeout (optional)\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    // Add any other headers you need\r\n  },\r\n});\r\n\r\nexport const uploadReference = async (referenceObject: ReferenceObject) => {\r\n  if (Object.keys(referenceObject).length === 0) {\r\n    throw new Error(OBJECT_IS_EMPTY_ERROR);\r\n  }\r\n  const formData = getFormDataFromJson(referenceObject);\r\n  try {\r\n    const request = await fetch(`${ARWEAVE_SERVICE_HOST}/reference`, {\r\n      method: 'POST',\r\n      //@ts-ignore\r\n      headers: {\r\n        'mb-api-key': \"anon\",\r\n      },\r\n      body: formData,\r\n      redirect: 'follow',\r\n    });\r\n    if (request.status !== 200) {\r\n      throw new Error(`Error uploading via arweave service: ${JSON.stringify(await request.json())}`);\r\n    }\r\n    const result = (await request.json());\r\n    return Object.assign(Object.assign({}, result), { media_url: `https://arweave.net/${result.media_hash}` });\r\n  }\r\n  catch (error) {\r\n    console.error('Uploading file to arweave failed');\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const getFormDataFromJson = (referenceObject: ReferenceObject) => {\r\n  const formData = new FormData();\r\n  Object.entries(referenceObject).forEach((entry) => {\r\n    const [key, value] = entry;\r\n    const hasCorrectMediaType = (key === 'document' || key === 'media' || key === 'animation_url');\r\n    const notMedia = !hasCorrectMediaType && !(value instanceof File);\r\n    const canBeUploaded = value instanceof File && value.size < MAX_UPLOAD_BYTES;\r\n    const invalidFile = !hasCorrectMediaType && (value instanceof File);\r\n    const mediaTypeWithoutFile = hasCorrectMediaType && (typeof (value) === 'string');\r\n    if (invalidFile) {\r\n      // example title: File\r\n      throw new Error('The provided field has a key that is not recognized by our service and will not be uploaded to arweave, try using media, animation_url or document');\r\n    }\r\n    if (mediaTypeWithoutFile) {\r\n      // example: media: \"\"  -> upload anyways\r\n      console.warn('The provided media type will not be uploaded because its a string and not a file, try attaching files to the following keys: media, animation_url or document');\r\n      //@ts-ignore\r\n      formData.append(key, value);\r\n    }\r\n    if (notMedia && typeof (value) === 'string') {\r\n      //fields\r\n      //@ts-ignore\r\n      formData.append(key, value);\r\n    }\r\n    else if (canBeUploaded) {\r\n      //media\r\n      //@ts-ignore\r\n      formData.append(key, value);\r\n    }\r\n  });\r\n  return formData;\r\n}\r\n\r\nexport const getActivityTime = (time: string) => {\r\n  const date = new Date(Number(time));\r\n\r\n  // Format the date and time components\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n  // Create a new formatted date string\r\n  const formattedDateTime = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n\r\n  return formattedDateTime;\r\n}\r\n\r\nexport const generateRandomString = (length: number) => {\r\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let result = '';\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","export const screen = {\r\n\tmobile: { max: 530 },\r\n\t// mobile : @media (max-width: ${screen.mobile.max}px)\r\n\ttablet: { min: 531, max: 830 },\r\n\t// tablet : @media (min-width: ${screen.tablet.min}px) and (max-width: ${screen.tablet.max}px)\r\n\tpc: { min: 831, max: 1439 },\r\n\t// pc : @media (min-width: ${screen.pc.min}px)\r\n\tmonitor: { min: 1440 },\r\n\t// monitor : @media (min-width: ${screen.pc.min}px) and (max-width: ${screen.pc.max}px)\r\n\t// huge monitor : @media (min-width: ${screen.monitor.min}px)\r\n} as const;\r\n\r\nexport const BODY_MARGIN_TOP = {\r\n\tpc: 50,\r\n\tmobile: 20,\r\n\ttablet: 20,\r\n};"],"names":["DisconnectedWallet","_jsx","style","textAlign","marginBottom","children","color","letterSpacing","IconSpan","styled","_templateObject","_taggedTemplateLiteral","_ref","wordBreak","_ref2","_ref3","theme","dimTextColor","_ref4","Tooltip","arrow","props","classes","useTooltipStyle","MuiTooltip","makeStyles","tooltip","position","borderRadius","textColor","backgroundColor","fontSize","fontWeight","padding","boxShadow","InfoTooltip","useMemo","document","documentElement","navigator","maxTouchPoints","msMaxTouchPoints","error","console","isTouchDevice","TouchTooltip","PointerTooltip","placement","tooltipProps","cursor","title","InfoOutlined","open","setOpen","useState","tooltipOpen","useCallback","tooltipClose","ClickAwayListener","onClickAway","onClick","onClose","disableFocusListener","disableHoverListener","disableTouchListener","PageTitle","className","docs","_jsxs","Styled","_Fragment","href","target","rel","display","alignItems","Launch","fill","marginLeft","width","Container","screen","FlexTitleContainer","_templateObject2","_templateObject3","PaddedLayout","maxWidth","margin","BODY_MARGIN_TOP","axiosInstance","axios","baseURL","concat","SERVER_URL","timeout","headers","uploadReference","async","Object","keys","referenceObject","length","Error","formData","getFormDataFromJson","request","fetch","method","body","redirect","status","JSON","stringify","json","result","assign","media_url","media_hash","FormData","entries","forEach","entry","key","value","hasCorrectMediaType","notMedia","File","canBeUploaded","size","mediaTypeWithoutFile","warn","append","getActivityTime","time","date","Date","Number","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","generateRandomString","characters","i","charAt","Math","floor","random","mobile","max","tablet","min","pc","monitor"],"sourceRoot":""}